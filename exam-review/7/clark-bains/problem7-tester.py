
import copy
import importlib

modname = "problem7"
funcname = "sortvolumes"
information = [[[[[5, 23, 9], [8, 48, 13], [4, 44, 24], [27, 14, 31], [50, 28, 6], [38, 41, 33], [32, 12, 38], [23, 30, 11], [45, 47, 40], [22, 28, 43], [3, 40, 27], [20, 29, 7], [39, 21, 34]]], [[5, 23, 9], [3, 40, 27], [20, 29, 7], [4, 44, 24], [8, 48, 13], [23, 30, 11], [50, 28, 6], [27, 14, 31], [32, 12, 38], [22, 28, 43], [39, 21, 34], [38, 41, 33], [45, 47, 40]]], [[[[7, 18, 25], [20, 20, 11], [40, 40, 14], [11, 43, 45], [48, 28, 33], [28, 50, 23]]], [[7, 18, 25], [20, 20, 11], [11, 43, 45], [40, 40, 14], [28, 50, 23], [48, 28, 33]]], [[[[13, 39, 37], [21, 39, 16], [50, 7, 30], [38, 44, 35], [1, 22, 5], [10, 48, 44]]], [[1, 22, 5], [50, 7, 30], [21, 39, 16], [13, 39, 37], [10, 48, 44], [38, 44, 35]]], [[[[1, 8, 1], [9, 15, 3], [4, 50, 5], [31, 39, 32], [49, 27, 35], [46, 22, 5], [10, 32, 17], [21, 28, 9], [50, 49, 41], [36, 44, 9]]], [[1, 8, 1], [9, 15, 3], [4, 50, 5], [46, 22, 5], [21, 28, 9], [10, 32, 17], [36, 44, 9], [31, 39, 32], [49, 27, 35], [50, 49, 41]]], [[[[26, 43, 50], [33, 19, 47], [23, 27, 18], [49, 38, 39], [28, 40, 18], [30, 45, 40], [49, 19, 16], [15, 20, 40], [18, 18, 5], [7, 5, 14], [45, 12, 4], [21, 40, 11]]], [[7, 5, 14], [18, 18, 5], [45, 12, 4], [21, 40, 11], [23, 27, 18], [15, 20, 40], [49, 19, 16], [28, 40, 18], [33, 19, 47], [30, 45, 40], [26, 43, 50], [49, 38, 39]]], [[[[45, 33, 25], [49, 29, 4], [50, 20, 12], [34, 47, 35], [43, 13, 43]]], [[49, 29, 4], [50, 20, 12], [43, 13, 43], [45, 33, 25], [34, 47, 35]]], [[[[35, 14, 48], [6, 42, 28], [33, 1, 15], [6, 4, 38], [31, 3, 50], [12, 42, 11], [23, 19, 26], [43, 33, 45], [21, 5, 12], [5, 16, 49], [23, 20, 2], [24, 27, 17], [30, 38, 38], [11, 14, 16], [33, 43, 32]]], [[33, 1, 15], [6, 4, 38], [23, 20, 2], [21, 5, 12], [11, 14, 16], [5, 16, 49], [31, 3, 50], [12, 42, 11], [6, 42, 28], [24, 27, 17], [23, 19, 26], [35, 14, 48], [30, 38, 38], [33, 43, 32], [43, 33, 45]]], [[[[5, 49, 6], [6, 38, 44], [30, 32, 5], [16, 6, 9], [30, 10, 43], [49, 14, 44], [2, 23, 8]]], [[2, 23, 8], [16, 6, 9], [5, 49, 6], [30, 32, 5], [6, 38, 44], [30, 10, 43], [49, 14, 44]]], [[[[49, 20, 1], [20, 38, 27], [36, 45, 6], [31, 33, 45], [36, 5, 40], [1, 35, 9], [41, 34, 42], [12, 4, 22], [37, 22, 15], [34, 32, 44], [15, 8, 29], [13, 22, 50], [47, 5, 27], [40, 18, 9], [34, 50, 11]]], [[1, 35, 9], [49, 20, 1], [12, 4, 22], [15, 8, 29], [47, 5, 27], [40, 18, 9], [36, 5, 40], [36, 45, 6], [37, 22, 15], [13, 22, 50], [34, 50, 11], [20, 38, 27], [31, 33, 45], [34, 32, 44], [41, 34, 42]]], [[[[40, 26, 48], [15, 15, 15], [44, 33, 27], [17, 23, 12], [11, 16, 31], [20, 31, 19]]], [[15, 15, 15], [17, 23, 12], [11, 16, 31], [20, 31, 19], [44, 33, 27], [40, 26, 48]]], [[[[40, 50, 18], [15, 22, 48], [45, 15, 33], [4, 19, 39], [43, 49, 33], [8, 23, 31], [32, 29, 14], [15, 24, 30], [29, 36, 38]]], [[4, 19, 39], [8, 23, 31], [15, 24, 30], [32, 29, 14], [15, 22, 48], [45, 15, 33], [40, 50, 18], [29, 36, 38], [43, 49, 33]]], [[[[35, 43, 39], [5, 17, 47], [33, 5, 35], [10, 27, 43], [16, 13, 10], [39, 4, 42], [29, 45, 26], [9, 21, 49], [34, 38, 25], [30, 17, 27], [11, 13, 38]]], [[16, 13, 10], [5, 17, 47], [11, 13, 38], [33, 5, 35], [39, 4, 42], [9, 21, 49], [10, 27, 43], [30, 17, 27], [34, 38, 25], [29, 45, 26], [35, 43, 39]]], [[[[8, 37, 27], [1, 34, 48], [1, 28, 21], [37, 24, 49], [11, 34, 2], [7, 16, 20], [44, 43, 26], [17, 9, 40], [1, 2, 46], [3, 48, 17], [9, 44, 48], [2, 36, 39], [25, 34, 5], [33, 35, 3], [14, 9, 6]]], [[1, 2, 46], [1, 28, 21], [11, 34, 2], [14, 9, 6], [1, 34, 48], [7, 16, 20], [3, 48, 17], [2, 36, 39], [33, 35, 3], [25, 34, 5], [17, 9, 40], [8, 37, 27], [9, 44, 48], [37, 24, 49], [44, 43, 26]]], [[[[14, 29, 23], [45, 24, 16], [24, 31, 42], [6, 37, 22], [30, 31, 11], [22, 42, 32], [15, 27, 5], [41, 1, 45]]], [[41, 1, 45], [15, 27, 5], [6, 37, 22], [14, 29, 23], [30, 31, 11], [45, 24, 16], [22, 42, 32], [24, 31, 42]]], [[[[19, 11, 6], [5, 23, 40], [17, 33, 20], [9, 39, 29], [15, 41, 8]]], [[19, 11, 6], [5, 23, 40], [15, 41, 8], [9, 39, 29], [17, 33, 20]]], [[[[6, 27, 12], [22, 29, 22], [29, 50, 12], [31, 41, 45], [5, 24, 22]]], [[6, 27, 12], [5, 24, 22], [22, 29, 22], [29, 50, 12], [31, 41, 45]]], [[[[33, 44, 39], [3, 36, 32], [45, 45, 38], [23, 30, 12], [44, 29, 42], [25, 4, 3], [36, 24, 47], [32, 6, 47], [49, 33, 22], [27, 31, 39], [30, 20, 38], [2, 10, 48], [8, 38, 23], [20, 40, 46]]], [[25, 4, 3], [2, 10, 48], [3, 36, 32], [8, 38, 23], [23, 30, 12], [32, 6, 47], [30, 20, 38], [27, 31, 39], [49, 33, 22], [20, 40, 46], [36, 24, 47], [44, 29, 42], [33, 44, 39], [45, 45, 38]]], [[[[40, 30, 43], [32, 7, 38], [24, 46, 5], [27, 11, 33], [3, 38, 50], [6, 13, 1], [36, 28, 23], [12, 28, 5], [4, 27, 36], [28, 21, 34], [4, 22, 28], [14, 27, 34], [36, 16, 23], [31, 4, 30]]], [[6, 13, 1], [12, 28, 5], [4, 22, 28], [31, 4, 30], [4, 27, 36], [24, 46, 5], [3, 38, 50], [32, 7, 38], [27, 11, 33], [14, 27, 34], [36, 16, 23], [28, 21, 34], [36, 28, 23], [40, 30, 43]]], [[[[18, 27, 34], [8, 24, 1], [1, 37, 11], [50, 43, 12], [38, 42, 22], [27, 26, 34], [22, 28, 42], [39, 28, 19], [36, 22, 39], [50, 24, 21]]], [[8, 24, 1], [1, 37, 11], [18, 27, 34], [39, 28, 19], [27, 26, 34], [50, 24, 21], [50, 43, 12], [22, 28, 42], [36, 22, 39], [38, 42, 22]]], [[[[13, 23, 17], [12, 41, 28], [18, 24, 16], [7, 18, 2], [11, 30, 47], [28, 32, 28], [24, 23, 23], [18, 36, 9], [22, 3, 14], [45, 36, 29], [41, 9, 17], [7, 17, 38], [5, 44, 36]]], [[7, 18, 2], [22, 3, 14], [7, 17, 38], [13, 23, 17], [18, 36, 9], [41, 9, 17], [18, 24, 16], [5, 44, 36], [24, 23, 23], [12, 41, 28], [11, 30, 47], [28, 32, 28], [45, 36, 29]]], [[[[23, 17, 42], [31, 38, 35], [1, 44, 26], [21, 14, 11], [12, 7, 4], [11, 15, 13], [47, 50, 33], [22, 50, 48], [36, 36, 42], [39, 1, 47]]], [[12, 7, 4], [1, 44, 26], [39, 1, 47], [11, 15, 13], [21, 14, 11], [23, 17, 42], [31, 38, 35], [22, 50, 48], [36, 36, 42], [47, 50, 33]]], [[[[39, 43, 29], [26, 3, 23], [41, 30, 31], [39, 34, 18], [14, 33, 24], [7, 46, 6], [39, 11, 4], [27, 41, 14], [11, 34, 46], [45, 22, 9], [32, 27, 36], [7, 4, 38]]], [[7, 4, 38], [39, 11, 4], [26, 3, 23], [7, 46, 6], [45, 22, 9], [14, 33, 24], [27, 41, 14], [11, 34, 46], [39, 34, 18], [32, 27, 36], [41, 30, 31], [39, 43, 29]]], [[[[21, 33, 36], [37, 48, 33], [3, 39, 13], [33, 48, 43], [42, 25, 47], [44, 16, 18]]], [[3, 39, 13], [44, 16, 18], [21, 33, 36], [42, 25, 47], [37, 48, 33], [33, 48, 43]]], [[[[43, 2, 41], [48, 8, 24], [20, 30, 47], [8, 8, 21], [14, 24, 30], [26, 33, 31], [39, 17, 5]]], [[8, 8, 21], [39, 17, 5], [43, 2, 41], [48, 8, 24], [14, 24, 30], [26, 33, 31], [20, 30, 47]]], [[[[36, 2, 41], [38, 32, 22], [28, 27, 4], [9, 9, 9], [8, 32, 27], [4, 31, 42], [3, 38, 28]]], [[9, 9, 9], [36, 2, 41], [28, 27, 4], [3, 38, 28], [4, 31, 42], [8, 32, 27], [38, 32, 22]]]]
resulttype = "orderedlist"

try:
    module = importlib.import_module(modname)
    func = getattr(module,funcname)
except:
    print("Error loading module and/or function - check the names?")
    quit()

correct = 0
incorrect = []
print("Checking function with test inputs...")
print()
for info in information:
    inputs = copy.deepcopy(info[0])
    goal = info[1]
    print("Inputs:", str(inputs)[1:-1])
    print("Goal:",goal)
    result = func(*inputs)
    print("Your Result:", result)
    success = False
    if resulttype == "int" and isinstance(result, int):
        success = goal == result
    elif resulttype == "float" and isinstance(result, (int,float)):
        success = abs(goal - result) < 0.001
    elif resulttype == "string" and isinstance(result, str):
        success = goal.lower() == result.lower()
    elif resulttype == "orderedlist" and isinstance(result, list):
        success = False
        if len(goal) == len(result):
            success = True
            for i in range(len(goal)):
                if goal[i] != result[i]:
                    success = False

    if success:
        correct += 1
        print("Good!")
    else:
        incorrect.append([inputs,goal,result])
        print("Incorrect!")
    print()
	
print()
print("Your code produced",correct,"out of", len(information),"correct results.")
print()

if len(incorrect) > 0:
    input("Hit enter to see the incorrect cases...")
    print("The inputs for which your program failed were:")
    print()
    for info in incorrect:
        print("Inputs:", str(info[0])[1:-1])
        print("Goal:", info[1])
        print("Your Result:", info[2])
        print()
		
